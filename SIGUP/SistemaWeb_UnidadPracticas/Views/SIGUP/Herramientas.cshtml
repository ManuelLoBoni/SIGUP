@{
    ViewBag.Title = "Herramientas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="mt-4">Herramientas</h1>
@*<ol class="breadcrumb mb-4">
    <li class="breadcrumb-item active">Administra los elementos existentes del inventario</li>
</ol>*@

<ol class="breadcrumb mb-4 mt-4">
    @*<li class="breadcrumb-item"><a href="#">Administrador</a></li>

    <li class="breadcrumb-item active">Herramientas</li>*@
    <li class="breadcrumb-item active">Administrador</li>
    <li class="breadcrumb-item"><a href="/SIGUP/Herramientas">Herramientas</a></li>
</ol>
<nav class="sticky-top bg-light">
    <div class="nav nav-tabs" id="nav-tab" role="tablist">
        <button class="nav-link active" id="nav-herramientas-tab" data-bs-toggle="tab" data-bs-target="#nav-herramientas" type="button" role="tab" aria-controls="nav-home" aria-selected="true">Herramientas</button>
        <button class="nav-link" id="nav-marcas-tab" data-bs-toggle="tab" data-bs-target="#nav-marcas" type="button" role="tab" aria-controls="nav-marcas" aria-selected="false">Marcas</button>
        <button class="nav-link" id="nav-categorias-tab" data-bs-toggle="tab" data-bs-target="#nav-categorias" type="button" role="tab" aria-controls="nav-categorias" aria-selected="false">Categorías</button>
    </div>
</nav>

<div class="tab-content" id="nav-tabContent">
    <div class="tab-pane fade show active" id="nav-herramientas" role="tabpanel" aria-labelledby="nav-herramientas-tab">
        @*<button class="btn btn-success" style="margin:20px 0;" onclick="abrirModal(null, 'herramientas')"> Añadir herramienta </button>*@

        <!-- Modal, con el id FormModal vamos a llamarlo cuando deseamos que aparezca y cuando no
    al momento de precionar el boton nuevo-->
        <div class="modal fade" id="FormModal_Herramientas" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
            @*Esto ultimo de data-bs-backdrop es para*@
            <div class="modal-dialog ">
                @*no poder quitar es modal a menos que demos clic en cerrar o en la x, si hacemos clic en otro lado no se puede quitar*@
                <div class="modal-content">
                    <div class="modal-header bg-success text-white">
                        <h5 class="modal-title" id="exampleModalLabel">Herramientas</h5>
                        <button type="button" class="btn-close bg-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body modal-bodyHerramientas">
                        @*El g-2 significa que va a agrupar las columnas de 2 en 2*@

                        <input id="txtIdValidacionH" type="hidden" value="0" />@*Con el valor 0 se identifica si es un Administrador nuevo a ingresar o es valor ya existe
                        pero si es diferente a 0 significa que ya existe y vamos a editar*@
                        @*Con el valor 0 se identifica si es un usuario nuevo a ingresar o es valor ya existe
                        pero si es diferente a 0 significa que ya existe y vamos a editar*@
                        <div class="row g-1">
                            <!--Porque solamente esta formando una fila-->
                            <div class="col-sm-5">
                                <label for="txtIdHerramienta" class="form-label">ID de Herramienta</label>
                                <input id="txtIdHerramienta"  class="form-control" type="text" autocomplete="off" placeholder="Ingresa el id de tu herramienta" />
                            </div>

                            <div class="col-sm-7">
                                <label for="txtNombreHerramienta" class="form-label">Nombre:</label>
                                <input type="text" class="form-control" id="txtNombreHerramienta" autocomplete="off" placeholder="Nombre la herramienta">
                            </div>
                            <div class="col-sm-5">
                                <label for="txtStockHerramienta" class="form-label">Cantidad</label>
                                <input type="number" class="form-control" id="txtStockHerramienta" autocomplete="off" value="1">
                            </div>
                            <div class="col-sm-7">
                                <label for="cmbActivoHerramienta" class="form-label"> ¿Disponible para prestamos? </label>
                                <select id="cmbActivoHerramienta" class="form-select">
                                    <option value="1">Si</option>
                                    <option value="0">No</option>
                                </select>
                            </div>
                            <div class="col-sm-6">
                                <label for="cmbMarcaHerramienta" class="form-label">Marca</label>
                                <select id="cmbMarcaHerramienta" class="form-select">
                                </select>
                            </div>

                            <div class="col-sm-6">
                                <label for="cmbCategoriaHerramienta" class="form-label">Categoría</label>
                                <select id="cmbCategoriaHerramienta" class="form-select">
                                </select>
                            </div>


                            <div class="col-sm-12">
                                <label for="txtObservacionesHerramienta" class="form-label">Observaciones</label>
                                <input type="text" class="form-control" id="txtObservacionesHerramienta" autocomplete="off" placeholder="Ingresa observaciones iniciales de la herramienta">
                            </div>


                        </div>
                        @*mensaje de alerta*@
                        <div class="row mt-2">
                            <div class="col-12">
                                <div id="mensajeErrorHerramientas" class="alert alert-danger" role="alert">
                                    ...
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary btn-eliminarHerramienta" data-bs-dismiss="modal" id="btnCerrar">Cerrar</button>
                        <button type="button" class="btn btn-primary btn-editarCategoria" onclick="guardar('herramientas')">Guardar</button>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="card mt-3">
            @*<div class="card-header">
                <i class="fas fa-table me-1"></i>Lista de Herramientas
            </div>*@
            <div class="card-body">
                @*boostrap es como manejar una hoja en excel*@
                <div class="row">
                    <div class="col-12  d-flex justify-content-between align-items-center">
                        @*numero de filas*@
                        <button type="button" class="btn btn-success" onclick="abrirModal(null, 'herramientas')">Añadir herramienta</button>
                        @*<button class="btn btn-success" style="margin:20px 0;" onclick="abrirModal(null, 'herramientas')"> Añadir herramienta </button>*@
                        <form action="@Url.Action(" DescargarPDF_Herramienta","SIGUP")" class="mt-0 ml-2">
                            <button class="btn btn-danger" type="submit"><i class="fas fa-file-pdf"></i> Descargar PDF</button>
                        </form>
                    </div>
                </div>
                <hr /> @*el id es para identificar la tabla*@
                <table id="tablaHerramientas" class="display cell-border" style="width:100%">
                    <thead class="text-lg-center">
                        <tr>
                            <th>#</th>
                            <th>Nombre</th>
                            <th>Cantidad</th>
                            <th>Marca</th>
                            <th>Categoría</th>
                            <th>Observaciones</th>
                            <th>Activo</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody class="text-lg-center">
                        @*ajax va permitir por ejemplo, hacer la ejecuciion del metodo listarUsuario llamada en el HomeControler*@

                    </tbody>
                </table>

            </div>

        </div>
       
    </div>

    <div class="tab-pane fade" id="nav-marcas" role="tabpanel" aria-labelledby="nav-marcas-tab">
        @*<button class="btn btn-success" style="margin:20px 0;" onclick="abrirModal(null, 'marcas')"> Añadir nuevo </button>*@

        <!-- Modal, con el id FormModal vamos a llamarlo cuando deseamos que aparezca y cuando no
    al momento de precionar el boton nuevo-->
        <div class="modal fade" id="FormModal_Marcas" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
            @*Esto ultimo de data-bs-backdrop es para*@
            <div class="modal-dialog">
                @*no poder quitar es modal a menos que demos clic en cerrar o en la x, si hacemos clic en otro lado no se puede quitar*@
                <div class="modal-content">
                    <div class="modal-header bg-success text-white">
                        <h5 class="modal-title" id="exampleModalLabel">Marcas</h5>
                        <button type="button" class="btn-close bg-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body modal-bodyMarcas">
                        @*El g-2 significa que va a agrupar las columnas de 2 en 2*@

                        <input id="txtIdMarca" type="hidden" value="0" />@*Con el valor 0 se identifica si es un usuario nuevo a ingresar o es valor ya existe
                        pero si es diferente a 0 significa que ya existe y vamos a editar*@
                        <div class="row g-1">
                            <!--Porque solamente esta formando una fila-->

                            <div class="col-sm-6">
                                <label for="txtDescripcionMarca" class="form-label">Descripcion</label>
                                <input type="text" class="form-control" id="txtDescripcionMarca" autocomplete="off">
                            </div>

                            <div class="col-sm-6">
                                <label for="cmbActivoMarca" class="form-label">Activo</label>
                                <select id="cmbActivoMarca" class="form-select">
                                    <option value="1">Si</option>
                                    <option value="0">No</option>
                                </select>
                            </div>
                        </div>
                        @*mensaje de alerta*@
                        <div class="row mt-2">
                            <div class="col-12">
                                <div id="mensajeErrorMarca" class="alert alert-danger" role="alert">
                                    ...
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="btnCerrar">Cerrar</button>
                        <button type="button" class="btn btn-primary" onclick="guardar('marcas')">Guardar</button>
                    </div>
                </div>
            </div>
        </div>
        <!--<table id="tablaMarcas" class="display cell-border" style="width:100%">
        <thead>
            <tr>
                <th>#</th>
                <th>Descripcion</th>
                <th>Activo</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>-->
        @*ajax va permitir por ejemplo, hacer la ejecuciion del metodo listarUsuario llamada en el HomeControler*@

        <!--</tbody>
    </table>-->
        <div class="card mt-3">
            @*<div class="card-header">
                <i class="fas fa-table me-1"></i>Lista de Marcas
            </div>*@
            <div class="card-body">
                @*boostrap es como manejar una hoja en excel*@
                <div class="row">
                    <div class="col-12  d-flex justify-content-between align-items-center">
                        @*numero de filas*@
                        <button type="button" class="btn btn-success" onclick="abrirModal(null, 'marcas')">Crear Nuevo</button>
                       
                        <form action="@Url.Action("DescargarPDF_Marca","SIGUP")" class="mt-0 ml-2">
                            <button class="btn btn-danger" type="submit"><i class="fas fa-file-pdf"></i> Descargar PDF</button>
                        </form>
                    </div>
                </div>
                <hr /> @*el id es para identificar la tabla*@
                <table id="tablaMarcas" class="display cell-border" style="width:100%">
                    <thead>
                        <tr>
                            <th>Código</th>
                            <th>Descripcion</th>
                            <th>Activo</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @*ajax va permitir por ejemplo, hacer la ejecuciion del metodo listarUsuario llamada en el HomeControler*@

                    </tbody>
                </table>

            </div>

        </div>
    </div>


    <div class="tab-pane fade" id="nav-categorias" role="tabpanel" aria-labelledby="nav-categorias-tab">
        @*<button class="btn btn-success" style="margin:20px 0;" onclick="abrirModal(null, 'marcas')"> Añadir nuevo </button>*@
        @*<ol class="breadcrumb mb-4 mt-4">
            <li class="breadcrumb-item"><a href="#">Administrador</a></li>
            <li class="breadcrumb-item active">Categorias</li>
        </ol>*@

        <div class="card mt-3">
            @*<div class="card-header">
                <i class="fas fa-table me-1"></i>Lista de Categorias
            </div>*@
            <div class="card-body">
                @*boostrap es como manejar una hoja en excel*@
                <div class="row">
                    <div class="col-12  d-flex justify-content-between align-items-center">
                        @*numero de filas*@
                        <button type="button" class="btn btn-success" onclick="abrirModal(null, 'categorias')">Crear Nuevo</button>

                        <form action="@Url.Action("DescargarPDF_Categoria","SIGUP")" class="mt-0 ml-2">
                            <button class="btn btn-danger" type="submit"><i class="fas fa-file-pdf"></i> Descargar PDF</button>
                        </form>
                    </div>
                </div>
                <hr /> @*el id es para identificar la tabla*@
                <table id="tablaCategoria" class="display cell-border" style="width:100%">
                    <thead>
                        <tr>
                            <th>Código</th>
                            <th>Descripcion</th>
                            <th>Activo</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @*ajax va permitir por ejemplo, hacer la ejecuciion del metodo listarUsuario llamada en el HomeControler*@

                    </tbody>
                </table>

            </div>

        </div>

        <!-- Modal, con el id FormModal vamos a llamarlo cuando deseamos que aparezca y cuando no
    al momento de precionar el boton nuevo-->
        <div class="modal fade" id="FormModalCategoria" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
            @*Esto ultimo de data-bs-backdrop es para*@
            <div class="modal-dialog">
                @*no poder quitar es modal a menos que demos clic en cerrar o en la x, si hacemos clic en otro lado no se puede quitar*@
                <div class="modal-content">
                    <div class="modal-header bg-success text-white">
                        <h5 class="modal-title" id="exampleModalLabel">Categoria</h5>
                        <button type="button" class="btn-close bg-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body modal-bodyCategorias">
                        @*El g-2 significa que va a agrupar las columnas de 2 en 2*@

                        <input id="txtIdCategoria" type="hidden" value="0" />@*Con el valor 0 se identifica si es un usuario nuevo a ingresar o es valor ya existe
                        pero si es diferente a 0 significa que ya existe y vamos a editar*@
                        <div class="row g-1">
                            <!--Porque solamente esta formando una fila-->

                            <div class="col-sm-6">
                                <label for="txtDescripcionCategoria" class="form-label">Descripcion</label>
                                <input type="text" class="form-control" id="txtDescripcionCategoria" autocomplete="off">
                            </div>

                            <div class="col-sm-6">
                                <label for="cmbActivoCategoria" class="form-label">Activo</label>
                                <select id="cmbActivoCategoria" class="form-select">
                                    <option value="1">Si</option>
                                    <option value="0">No</option>
                                </select>
                            </div>
                        </div>
                        @*mensaje de alerta*@
                        <div class="row mt-2">
                            <div class="col-12">
                                <div id="mensajeErrorCategoria" class="alert alert-danger" role="alert">
                                    ...
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                        <button type="button" class="btn btn-primary" onclick="guardar('categorias')">Guardar</button>
                       
                    </div>
                </div>
            </div>
        </div>


        <!--Nuevo-->
        @*<button class="btn btn-success" style="margin:20px 0;" onclick="abrirModal(null, 'categorias')"> Añadir nuevo </button>*@

        <!-- Modal, con el id FormModal vamos a llamarlo cuando deseamos que aparezca y cuando no
    al momento de precionar el boton nuevo-->
        @*<div class="modal fade" id="FormModal_Categorias" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">*@


        @*Esto ultimo de data-bs-backdrop es para*@



        @*<div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="button" class="btn btn-primary" onclick="guardar('categorias')">Guardar</button>
                </div>
            </div>
        </div>*@




        <!--<table id="tablaCategoria" class="display cell-border" style="width:100%">
    <thead>
        <tr>
            <th>Código</th>
            <th>Descripcion</th>
            <th>Activo</th>
            <th></th>
        </tr>
    </thead>
    <tbody>-->
        @*ajax va permitir por ejemplo, hacer la ejecuciion del metodo listarUsuario llamada en el HomeControler*@

        <!--</tbody>
    </table>-->
    </div>
</div>


@section scripts{
    <script>
        //Elementos seleccionados para usos posteriores
        var tablaMarcas;
        var tablaCategorias;
        var tablaHerramientas;
        var tabladata;
        var filaSeleccionada;

        $(document).ready(function () {


            function actualizarDatos() {
                setTimeout(function () {
                    ocultarAdvertencia(elemento);
                    //clearInterval(intervalo);
                }, 5000);
            }
        });

        //Asignación de las propiedades datatable a las tablas (Contienjen los datos desde una respuesta del servidor)
        tablaHerramientas = $("#tablaHerramientas").DataTable({
            responsive: true,
            ordering: false,
            "ajax": {
                url: '@Url.Action("listarHerramientas", "SIGUP")',
                type: 'GET',
                dataType: 'json'
            },
            "columns": [
                { "data": "idHerramienta" },
                { "data": "nombre" },
                { "data": "cantidad" },
                {
                    "data": "id_marcaHerramienta", "render": function (data) {
                        return data.descripcion
                    }
                },
                {
                    "data": "id_categoHerramienta", "render": function (data) {
                        return data.descripcion
                    }
                },
                { "data": "observaciones" },
                {
                    "data": "activo", "render": function (valor) {
                        if (valor) {/*Si el valor es verdadero*/
                            return '<span class="badge bg-success">Si</span>'
                        } else {
                            return '<span class="badge bg-danger">No</span>'
                        }
                    }
                },
                {
                    "data": "idHerramienta", "render": function (data, type, row, meta) {

                        return $("<button>").addClass("btn btn-primary btn-editarHerramienta btn-sm").append(
                            $("<i>").addClass("fas fa-pen")
                        ).attr({ "data-informacionherramienta": JSON.stringify(row) })[0].outerHTML
                            +
                            $("<button>").addClass("btn btn-danger btn-eliminarHerramienta btn-sm ms-2").append(
                                $("<i>").addClass("fas fa-trash")
                            ).attr({ "data-informacionherramienta": JSON.stringify(row) })[0].outerHTML;

                    }
                }

            ]
        })
        tablaMarcas = $("#tablaMarcas").DataTable({
            responsive: true,/*Para que sea resposiva*/
            ordering: false,
            "ajax": {/*Como pinta la tabla, ajax solo trae todos los valores*/
                url: '@Url.Action("ListarMarca", "SIGUP")',
                type: "GET",
                dataType: "json"
            },
            "columns": [/*Todas las columnas que vamos a usar*/
                /*El data s el origen que se esta llamando en su controlar Mantenedir cuando igualamos en el js un data
                 y el seguno valor es como se llama la columna*/
                { "data": "idMarca" },
                { "data": "descripcion" },/*El nombre del segundo identificador debe ser igual al de la tabla, la columna*/
                {
                    "data": "activo", "render": function (valor) {/*El render permite obtener el valor de la columna activo*/
                        if (valor) {/*Si el valor es verdadero*/
                            return '<span class="badge bg-success">Si</span>'
                        } else {
                            return '<span class="badge bg-danger">No</span>'
                        }
                    }

                },
                {
                    "data": "idMarca", "render": function (data, type, row, meta) {

                        return $("<button>").addClass("btn btn-primary btn-editarMarca btn-sm").append(
                            $("<i>").addClass("fas fa-pen")
                        ).attr({ "data-informacionmarca": JSON.stringify(row) })[0].outerHTML
                            +
                            $("<button>").addClass("btn btn-danger btn-eliminarMarca btn-sm ms-2").append(
                                $("<i>").addClass("fas fa-trash")
                            ).attr({ "data-informacionmarca": JSON.stringify(row) })[0].outerHTML;

                    }
                }
            ]
        });
        tabladata = $("#tablaCategoria").DataTable({
            responsive: true,/*Para que sea resposiva*/
            ordering: false,
            "ajax": {/*Como pinta la tabla, ajax solo trae todos los valores*/
                url: '@Url.Action("ListarCategoria", "SIGUP")',
                type: "GET",
                dataType: "json"
            },
            "columns": [/*Todas las columnas que vamos a usar*/
                /*El data s el origen que se esta llamando en su controlar Mantenedir cuando igualamos en el js un data
                 y el seguno valor es como se llama la columna*/
                { "data": "idCategoria" },
                { "data": "descripcion" },/*El nombre del segundo identificador debe ser igual al de la tabla, la columna*/
                {
                    "data": "activo", "render": function (valor) {/*El render permite obtener el valor de la columna activo*/
                        if (valor) {/*Si el valor es verdadero*/
                            return '<span class="badge bg-success">Si</span>'
                        } else {
                            return '<span class="badge bg-danger">No</span>'
                        }
                    }

                },
                {
                    "data": "idCategoria", "render": function (data, type, row, meta) {

                        return $("<button>").addClass("btn btn-primary btn-editarCategoria btn-sm").append(
                            $("<i>").addClass("fas fa-pen")
                        ).attr({ "data-informacioncategoria": JSON.stringify(row) })[0].outerHTML
                            +
                            $("<button>").addClass("btn btn-danger btn-eliminarCategoria btn-sm ms-2").append(
                                $("<i>").addClass("fas fa-trash")
                        ).attr({ "data-informacioncategoria": JSON.stringify(row) })[0].outerHTML;

                    },
                    "orderable": false,
                    "searchable": false,
                    "width": "90px"
                }
            ],/*Propiedad o atributos van dentro de las comillas ""*/
            "language": {
                "url": "https://cdn.datatables.net/plug-ins/1.13.4/i18n/es-ES.json"
            }

        });
        cargarMarcas();
        cargarCategorias();
        //Función que muestra el modal dependiendo de cual modal se manda como argumento, json es el objeto json que se puede mandar para poder usarlo y llenar datos previos, el valor puede ser nulo.
        function abrirModal(json, modal) {
            switch (modal) {
                case 'herramientas':
                    $("#txtIdValidacionH").val(0);
                    $("#txtIdHerramienta").val("");
                    $("#txtIdHerramienta").removeAttr("disabled");
                    $("#txtNombreHerramienta").val("");
                    $("#txtStockHerramienta").val(1);
                    $("#txtObservacionesHerramienta").val("NINGUNA");
                    $("#cmbActivoHerramienta").val(1);
                    $("#mensajeErrorHerramientas").hide();
                    $("#cmbMarcaHerramienta").val($("#cmbMarcaHerramienta option:first").val());
                    $("#cmbCategoriaHerramienta").val($("#cmbCategoriaHerramienta option:first").val());
                    //cargarMarcas();
                    //cargarCategorias();
                    /*Llamamos al form modal*/
                    if (json != null) {

                        $("#txtIdValidacionH").val(json.idHerramienta);
                        $("#txtIdHerramienta").val(json.idHerramienta);

                        $("#txtIdHerramienta").attr({ "disabled": "disabled" });
                        $("#txtNombreHerramienta").val(json.nombre);
                        $("#txtStockHerramienta").val(json.cantidad);
                        $("#cmbMarcaHerramienta").val(json.id_marcaHerramienta.idMarca).trigger('change');
                        $("#cmbCategoriaHerramienta").val(json.id_categoHerramienta.idCategoria).trigger('change');
                      /*  $("#cmbUsuario").val(json.id_Usuario.idUsuario).trigger('change');*/
                        $("#txtObservacionesHerramienta").val(json.observaciones);
                        $("#cmbActivoHerramienta").val(json.activo == true ? 1 : 0);

                    }

                    $("#FormModal_Herramientas").modal("show");
                    break;
                case 'marcas':
                    $("#txtIdMarca").val(0); /*Con el # llama con el id del elemento chtml*/
                    $("#txtDescripcionMarca").val("");
                    $("#cmbActivoMarca").val(1);


                    $("#mensajeErrorMarca").hide();
                    /*Llamamos al form modal*/
                    if (json != null) {
                        $("#txtIdMarca").val(json.idMarca);
                        $("#txtDescripcionMarca").val(json.descripcion);
                        $("#cmbActivoMarca").val(json.activo == true ? 1 : 0);
                    }

                    $("#FormModal_Marcas").modal("show");
                    break;
                case 'categorias':

                    $("#txtIdCategoria").val(0); /*Con el # llama con el id del elemento chtml*/
                    $("#txtDescripcionCategoria").val("");
                    $("#cmbActivoCategoria").val(1);


                    $("#mensajeErrorCategoria").hide();
                    /*Llamamos al form modal*/
                    if (json != null) {/*Porque el metodo abrir modal puede abrirse con crear nuevo o con editar,
                    * por eso esta linea*/
                        $("#txtIdCategoria").val(json.idCategoria);/*Traerá el codigo pero no lo mostrará al usuario*/
                        $("#txtDescripcionCategoria").val(json.descripcion); /*El json o data, trae una propieadad llamada nombres*/
                        $("#cmbActivoCategoria").val(json.activo == true ? 1 : 0);/*Si es igual a true de el valor de uno
                        y si no es true de el valor de 0*/

                    }

                    $("#FormModalCategoria").modal("show");

                break;

                default:
                    /*alert('No se ha seleccionado alguno');*/
                    /*alert('No se ha seleccionado ningun case');*/
                    swal({
                        title: "Abrir modal",
                        text: "No se ha seleccionado algun case",
                        type: "info"
                    });
                    break;
            }
        }

        //Función que ejecuta la petición POST para guardar nuevos registros en la base de datos, dentro de la misma función se evalúa si el elemento a guardar es una edición o es nuevo.
        function guardar(elemento) {

            switch (elemento) {
                case 'herramientas':
                    console.log('En herramientas')
                    var Herramienta = {
                        idValidacionHerramienta: $("#txtIdValidacionH").val(),
                        idHerramienta: $("#txtIdHerramienta").val(),
                        nombre: $("#txtNombreHerramienta").val(),
                        cantidad: $('#txtStockHerramienta').val(),

                        id_marcaHerramienta: {
                            idMarca: $('#cmbMarcaHerramienta').val()
                        },
                        id_categoHerramienta: {
                            idCategoria: $('#cmbCategoriaHerramienta').val()
                        },
                        observaciones: $('#txtObservacionesHerramienta').val(),
                        activo: $("#cmbActivoHerramienta").val() == 1 ? true : false /*Para saber si se esta seleccionado un Si (Si = 0)
     * o un no (No = 0*/
                    }
                    console.log(Herramienta)
                    jQuery.ajax({/*Llama al metodo de guardar Administrador, que dependiendo de la accion va a crear nuevo
 o a editar, tomando en cuenta que se basa en que si el id = 0 o no*/
    url: '@Url.Action("GuardarHerramienta", "SIGUP")',
    type: "POST",
    data: JSON.stringify({ objeto: Herramienta }),/*Paso de valores
     el stringfy lo convierte a texto*/
    dataType: "json",
    contentType: "application/json; charset=utf-8",
    success: function (data) {
        $(".modal-bodyHerramientas").LoadingOverlay("hide");
        //Administrador NUEVO
        if (Herramienta.idValidacionHerramienta == "0") { /*Es decir, si el id es 0 en inicio (el valor es 0 inicialmente) significa que es
            un Administrador nuevo, por lo que se ha dado dando clic con el boton de crear*/
            /*alert("Crear Administrador")*/

            if (data.resultado != "0") {
             //   Herramienta.idHerramienta = data.resultado;
             ///*   tabladata.row.add(Administrador).draw(false);*/

             //   $("#FormModal_Herramientas").modal("hide");
             //  /* $("#mensajeErrorHerramientas").hide();*/
             //   tablaHerramientas.ajax.reload();


                console.log("Entró");
                Herramienta.idHerramienta = data.resultado;
               /* tablaHerramientas.row.add(Herramienta).draw(false);*/
                //$("#btnEliminar").trigger('click');
                $("#FormModal_Herramientas").modal("hide");
                tablaHerramientas.ajax.reload();


            } else {

                $("#mensajeErrorHerramientas").text(data.mensaje);
                $("#mensajeErrorHerramientas").show();
            }
        }
        //Administrador Editar
        else {
            /* alert("Editar Administrador")*/
            /*Pero si el id es diferente de 0, es decir ya existe, entonces se esta editando
             a un Administrador, por lo que indica que se ha dado clic en el boton de editar, eso lo comprobamos
             con los alert comentados*/

            if (data.resultado) {
                tablaHerramientas.ajax.reload();
                /*tabladata.row(filaSeleccionada).data(Administrador).draw(false);*/
                /*filaSeleccionada = null;*/
                $("#FormModal_Herramientas").modal("hide");

            } else {
                $("#mensajeErrorHerramientas").text(data.mensaje);
                $("#mensajeErrorHerramientas").show();
            }
        }
    },
    error: function (error) {
        $(".modal-bodyHerramientas").LoadingOverlay("hide");
        $("#mensajeErrorHerramientas").text("Error Ajax");
        $("#mensajeErrorHerramientas").show();
    },
    beforeSend: function () {
        $(".modal-bodyHerramientas").LoadingOverlay("show", {
            imageResizeFactor: 2,
            text: "Cargando...",
            size: 14
        });
    }
});
                    console.log("hola");
                    console.log(Herramienta);

                    break;

                case 'marcas':
                    console.log('En marcas');
                    var marca = {
                        idMarca: $("#txtIdMarca").val(),
                        descripcion: $("#txtDescripcionMarca").val(),
                        activo: $("#cmbActivoMarca").val() == 1 ? true : false
                    }
                    console.log(marca['descripcion']);

                    jQuery.ajax({
                        url: '@Url.Action("guardarMarca", "SIGUP")',
                        type: "POST",
                        data: JSON.stringify({ marca: marca }),
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            if (marca.idMarca == "0") {
                                if (data.resultado != 0) {
                                    console.log("Entró");
                                    marca.idMarca = data.resultado;
                                    tablaMarcas.row.add(marca).draw(false);
                                    //$("#btnEliminar").trigger('click');
                                    $("#FormModal_Marcas").modal("hide");
                                    tablaMarcas.ajax.reload();
                                } else {
                                    $("#mensajeErrorMarca").text(data.mensaje);
                                    $("#mensajeErrorMarca").show();
                                }
                            } else {
                                if (data.resultado) {
                                    tablaMarcas.ajax.reload();
                                    /* tabladata.row(filaSeleccionada).data(Categoria).draw(false);*/
                                    filaSeleccionada = null;
                                    $("#FormModal_Marcas").modal("hide");

                                } else {
                                    $("#mensajeErrorCategoria").text(data.mensaje);
                                    $("#mensajeErrorCategoria").show();
                                }
                            }
                        },

                        error: function (error) {
                            /* $(".modal-bodyMarcas").LoadingOverlay("hide");*/
                            console.log("Error de no se que :V");
                            $("#mensajeErrorMarca").text("Error Ajax");
                            $("#mensajeErrorMarca").show();
                        }
                    })
                break;

                case 'categorias':

                        var Categoria = {
                            idCategoria: $("#txtIdCategoria").val(), /*Los dos puntos de la condicion es "si es diferente es:"
                             el signo de interrogacion es un entonces
                             leyendo la sentencia de abajo seria, si el valor es igual a 1, entonces es true (verdadero)
                             pero si es diferentes es falso*/
                            descripcion: $("#txtDescripcionCategoria").val(),/*El punto val sirve para obtener un valor y para establecer un valor*/
                            activo: $("#cmbActivoCategoria").val() == 1 ? true : false, /*Para saber si se esta seleccionado un Si (Si = 0)
                             * o un no (No = 0*/
                        }
                        jQuery.ajax({/*Llama al metodo de guardar usuario, que dependiendo de la accion va a crear nuevo
                          o a editar, tomando en cuenta que se basa en que si el id = 0 o no*/
                            url: '@Url.Action("GuardarCategoria", "SIGUP")',
                            type: "POST",
                            data: JSON.stringify({ objeto: Categoria}),/*Paso de valores
                             el stringfy lo convierte a texto*/
                            dataType: "json",
                            contentType: "application/json; charset=utf-8",
                            success: function (data) {
                                $(".modal-bodyCategorias").LoadingOverlay("hide");
                                //CATEGORIA NUEVO
                                if (Categoria.IdCategoria == "0") { /*Es decir, si el id es 0 en inicio (el valor es 0 inicialmente) significa que es
                                    un usuario nuevo, por lo que se ha dado dando clic con el boton de crear*/
                                    /*alert("Crear usuario")*/

                                    if (data.resultado != 0) {
                                        Categoria.IdCategoria = data.resultado;
                                        tabladata.row.add(Categoria).draw(false);
                                        $("#FormModalCategoria").modal("hide");
                                        tabladata.ajax.reload();
                                    } else {

                                        $("#mensajeErrorCategoria").text(data.mensaje);
                                        $("#mensajeErrorCategoria").show();
                                    }
                                }
                                //CATEGORIA Editar
                                else {
                                    /*Pero si el id es diferente de 0, es decir ya existe, entonces se esta editando
                                     a un usuario, por lo que indica que se ha dado clic en el boton de editar, eso lo comprobamos
                                     con los alert comentados*/

                                    if (data.resultado) {
                                        tabladata.ajax.reload();
                                       /* tabladata.row(filaSeleccionada).data(Categoria).draw(false);*/
                                        filaSeleccionada = null;
                                        $("#FormModalCategoria").modal("hide");

                                    } else {
                                        $("#mensajeErrorCategoria").text(data.mensaje);
                                        $("#mensajeErrorCategoria").show();
                                    }
                                }
                            },
                                error: function (error) {
                                    $(".modal-bodyCategorias").LoadingOverlay("hide");
                                    $("#mensajeErrorCategoria").text("Error Ajax");
                                    $("#mensajeErrorCategoria").show();
                                },
                                beforeSend: function () {
                                    $(".modal-bodyCategorias").LoadingOverlay("show", {
                                        imageResizeFactor: 2,
                                        text: "Cargando...",
                                        size: 24
                                    });
                                }
                             });


                break;

                default:
                   /* alert('No se ha seleccionado ningun case');*/
                    swal({
                        title: "Guardar",
                        text: "No se ha seleccionado algun case",
                        type: "info"
                    });
                    break;
            }
        }

        function crearOptionForSelect(id, nombre) {
            var option = $("<option></option>");
            option.text(nombre);
            option.val(id);
            return option;
        }

        function cargarSelectMarcas(arreglo) {
            $('#cmbMarcaHerramienta').empty();
            $("#cmbMarcaHerramienta").append($("<option selected>").val("").attr({ "value": "0", "disabled": "true" }).text("Seleccionar"));
            for (var clave in arreglo) {
                if (arreglo.hasOwnProperty(clave)) {
                    var objetoDato = arreglo[clave];
                    var id = objetoDato['idMarca'];
                    var nombre = objetoDato['descripcion'];

                    //Añadimos al select los elementos
                    $('#cmbMarcaHerramienta').append(crearOptionForSelect(id, nombre));
                }
            }
        }

        function cargarSelectCategorias(arreglo) {
            $('#cmbCategoriaHerramienta').empty();
            $("#cmbCategoriaHerramienta").append($("<option selected>").val("").attr({ "value": "0", "disabled": "true" }).text("Seleccionar"));
            for (var clave in arreglo) {
                if (arreglo.hasOwnProperty(clave)) {
                    var objetoDato = arreglo[clave];
                    console.log(objetoDato);
                    var id = objetoDato['idCategoria'];
                    var nombre = objetoDato['descripcion'];

                    //Añadimos al select los elementos
                    $('#cmbCategoriaHerramienta').append(crearOptionForSelect(id, nombre));
                }
            }
        }

        function cargarMarcas() {
            $.ajax({
                url: '@Url.Action("ListarMarcaEnHerramienta", "SIGUP")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    cargarSelectMarcas(response.data);
                },
                error: function (errror) {
                    console.log("Error en la petición ajax");
                }
            });
        }

        function cargarCategorias() {
            $.ajax({
                url: '@Url.Action("ListarCategoriaEnHerramienta", "SIGUP")',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    cargarSelectCategorias(response.data);
                },
                error: function (errror) {
                    console.log("Error en la petición ajax");
                }
            });
        }

        //Eventos on click

        //Eventos eliminar modificar, cada uno de estos eventos se selecciona a partir de el tbody de la tabla en cuestión
        $("#tablaCategoria tbody").on("click", '.btn-editarCategoria', function () {
            //Obtenemos el elemento más cercano a la fila seleccionada como tr
            filaSeleccionada = $(this).closest("tr");
            //Obtenemos como json los datos de esa fila
            var data = tabladata.row(filaSeleccionada).data();
            //Los almacenamos en un json
            var json = $(this).data("informacioncategoria")
            //Se manda a llamar el modal.
            abrirModal(json, 'categorias')

        })

        $("#tablaCategoria tbody").on("click", '.btn-eliminarCategoria', function () {

            //var categoriaSeleccionado = $(this).closest("tr");
            //console.log(categoriaSeleccionado)

            var json = $(this).data("informacioncategoria")

            swal({
                title: "¿Esta Seguro?",
                text: "¿Desea eliminar la categoria?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-primary",
                confirmButtonText: "Si",
                cancelButtonText: "No",
                closeOnConfirm: false
            },
                function (isConfirm) {
                    if (isConfirm) {
                        jQuery.ajax({
                        url: '@Url.Action("EliminarCategoria", "SIGUP")',
                        type: "POST",
                        data: JSON.stringify({ id:json.idCategoria }),
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {

                            if (data.resultado) {
                                tabladata.ajax.reload();
                            }else {
                                swal("No se pudo eliminar", data.mensaje, "error")
                            }
                        },
                        error: function (error) {
                            console.log(error)
                        }

                     });
                        swal("¡Eliminado!", "La categoria ha sido eliminada correctamente", "success");
                    } else {
                       /* swal("Cancelled", "Your imaginary file is safe :)", "error");*/
                    }
                });


        })

        $("#tablaMarcas tbody").on("click", '.btn-editarMarca', function () {

            filaSeleccionada = $(this).closest("tr");
            var data = tablaMarcas.row(filaSeleccionada).data();
            var json = $(this).data("informacionmarca");
            abrirModal(json, 'marcas');
        })

        $("#tablaMarcas tbody").on("click", '.btn-eliminarMarca', function () {

            var json = $(this).data("informacionmarca")
            swal({
                title: "¿Esta Seguro?",
                text: "¿Desea eliminar la marca?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-primary",
                confirmButtonText: "Si",
                cancelButtonText: "No",
                closeOnConfirm: false
            },
                function (isConfirm) {
                    if (isConfirm) {
                        jQuery.ajax({
                            url: '@Url.Action("eliminarMarca", "SIGUP")',
                            type: "POST",
                            data: JSON.stringify({ id: json.idMarca }),/*Paso de valores*/
                            /*el stringfy lo convierte a texto*/
                            dataType: "json",
                            contentType: "application/json; charset=utf-8",
                            success: function (data) {/*Ese data esta almacenando la respuesta del metodo eliminar usuario
                                * hecho en homeController*/
                                //ELIMINAR CATEGORIA

                                if (data.resultado) { /*si el resultado es verdadera)*/
                                    //tabladata.row(usuarioSeleccionado).remove().draw();
                                    tablaMarcas.ajax.reload();
                                } else {
                                    swal("No se pudo eliminar la marca", data.mensaje, "error")
                                }/*Primer parametro mensaje, luego el mensaje del data, y el tercero indica que es de tipo error*/

                            },
                            error: function (error) {
                                console.log(error)
                                swal("Error: ", error, "error")
                            }

                        });
                        swal("¡Eliminado!", "La marca ha sido eliminada correctamente", "success");

                    }
                });




        });

        $("#tablaHerramientas tbody").on("click", '.btn-editarHerramienta', function () {
            //Obtenemos el elemento más cercano a la fila seleccionada como tr
            filaSeleccionada = $(this).closest("tr");
            //Obtenemos como json los datos de esa fila
            var data = tablaHerramientas.row(filaSeleccionada).data();
            //Los almacenamos en un json
            var json = $(this).data("informacionherramienta")
            //Se manda a llamar el modal.
            abrirModal(json, 'herramientas')

        })

        $("#tablaHerramientas tbody").on("click", '.btn-eliminarHerramienta', function () {

            var json = $(this).data("informacionherramienta")
        swal({
            title: "¿Está seguro de eliminar la herramienta?",
            text: "Se eliminará completamente del sistema junto con los préstamos correspodientes a esta herramienta",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-primary",
            confirmButtonText: "Si",
            cancelButtonText: "No",
            closeOnConfirm: false
        },

            function (isConfirm) {
                if (isConfirm) {
                    jQuery.ajax({
                        url: '@Url.Action("EliminarHerramienta", "SIGUP")',
                        type: "POST",
                        data: JSON.stringify({ id: json.idHerramienta }),/*Paso de valores*/
                        /*el stringfy lo convierte a texto*/
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {/*Ese data esta almacenando la respuesta del metodo eliminar usuario
                            * hecho en homeController*/
                            //ELIMINAR CATEGORIA

                            if (data.resultado) { /*si el resultado es verdadera)*/
                                //tabladata.row(usuarioSeleccionado).remove().draw();
                                tablaHerramientas.ajax.reload();
                            } else {
                                swal("No se pudo eliminar", data.mensaje, "error")
                                return false;
                            }/*Primer parametro mensaje, luego el mensaje del data, y el tercero indica que es de tipo error*/

                        },
                        error: function (error) {
                            console.log(error)
                            swal("Error: ", error, "error")
                        }

                    });
                   
                    swal("¡Eliminado!", "La herramienta ha sido eliminada correctamente", "success");
                } 
            });



    });
        //$("#tablaHerramientas tbody").on('click', '.btn-eliminarHerramienta', function (evento) {

        //})
    </script>
}

